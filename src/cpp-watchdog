#!/usr/bin/env python3

'''
@author: Polyakov Daniil
@mail: arjentix@gmail.com
@github: Arjentix
@date: 30.07.20
'''

from event_handler import EventHandler
from window import Window

import sys
import time 
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler 
import getopt

window = Window()
stop = False

def get_args(argv):
    home = '.'
    build_command = ''
    test_bin = f'{home}/build/test/test'
    files = [home]

    optlist, args = getopt.getopt(argv, 'h:b:t:', ['home=', 'build-command=', 'test-bin='])
    for opt, arg in optlist:
        if opt in ('-h', '-home'):
            home = arg
        elif opt in ('-b', '--build-command'):
            build_command = arg
        elif opt in ('-t', '--test-bin'):
            test_bin = arg

    if build_command == '':
        build_command = 'cmake --build build --config Debug --target all -- -j 10'
    if len(args) != 0:
        files = args

    return [build_command, test_bin, files]

def quit_program():
    global window, stop
    window.stop()
    stop = True

def main():
    global window, stop
    build_command, test_bin, files = get_args(sys.argv[1:])
    handler = EventHandler(window, build_command, test_bin)
    observer = Observer()
    def rerun():
        observer.stop() # Stopping observer to avoid infinite loop
        handler.on_any_event()
        observer.run()

    # Initial run
    handler.on_any_event(None)

    # Registration of 3 types of Enter key
    window.add_key_handler(window.KEY_ENTER, rerun)
    window.add_key_handler(10, rerun)
    window.add_key_handler(13, rerun)

    window.add_key_handler(ord('q'), quit_program)

    # observer = Observer()
    for file in files:
        observer.schedule(handler, file, recursive=True)
    observer.start()

    try:
        while not stop:
            time.sleep(1)
    except KeyboardInterrupt:
        pass
    observer.stop()
    observer.join()

if __name__ == "__main__":
    main()
     